.source test/test_functions/recursion.selma
.class public Main
.super java/lang/Object
.field public static scanner_field Ljava/util/Scanner;
.field public static result_1 I 
.method public <init>()V
    aload_0
    invokespecial java/lang/Object/<init>()V
    return
.end method
.method public static main([Ljava/lang/String;)V
.limit stack 4
.limit locals 5
    new java/util/Scanner
    dup                                       ; dup for <init>
    getstatic java/lang/System/in Ljava/io/InputStream;
    invokespecial java/util/Scanner/<init>(Ljava/io/InputStream;)V
    putstatic Main/scanner_field Ljava/util/Scanner;
.line 1
.line 13
    bipush 10
    invokestatic Main/fac(I)I
    dup
    getstatic java/lang/System/out Ljava/io/PrintStream;
    swap
    invokevirtual java/io/PrintStream/println(I)V
    pop
.line 24
    iconst_1
                            ; e1 right hand for assignment
    dup
    putstatic Main/result_1 I
    pop
.line 25
    bipush 10
    invokestatic Main/fac2(I)V
.line 28
    getstatic Main/result_1 I ; load global result_1
    dup
    getstatic java/lang/System/out Ljava/io/PrintStream;
    swap
    invokevirtual java/io/PrintStream/println(I)V
    pop
    return
.end method
.method public static fac(I)I
.limit stack 6
.limit locals 3
.line 1
.line 2
.line 3
    iload 0                ; load n_1 from 0
    iconst_1
    if_icmpeq L0        ; e1 = e2
    iconst_0
    goto L1
L0:
    iconst_1
L1:
    ifeq L2          ; e1 is false
.line 4
    iconst_1
                            ; e1 right hand for assignment
    dup
    istore 1               ; store e1 in result_1
    goto L3
L2:
.line 6
    iload 0                ; load n_1 from 0
.line 6
    iload 0                ; load n_1 from 0
    iconst_1
    isub
    invokestatic Main/fac(I)I
    imul                            ; e1 right hand for assignment
    dup
    istore 1               ; store e1 in result_1
L3:
    pop
    iload 1                ; load result_1 from 1
    ireturn
.end method
.method public static fac2(I)V
.limit stack 5
.limit locals 2
.line 17
.line 18
    iload 0                ; load n_1 from 0
    iconst_1
    if_icmpne L0        ; e1 != e2
    iconst_0
    goto L1
L0:
    iconst_1
L1:
    ifeq L2          ; e1 is false
.line 19
    getstatic Main/result_1 I ; load global result_1
    iload 0                ; load n_1 from 0
    imul                            ; e1 right hand for assignment
    dup
    putstatic Main/result_1 I
    pop
.line 20
    iload 0                ; load n_1 from 0
    iconst_1
    isub
    invokestatic Main/fac2(I)V
                           ; e2 if true expression
L2:
    return
.end method
